
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  10240;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on;
    client_max_body_size 50m;
    send_timeout 60;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;	  
    fastcgi_buffer_size 32k;	    
    fastcgi_buffers 64 128k;	      
    fastcgi_busy_buffers_size 128k;	       
    fastcgi_temp_file_write_size 50m;
    proxy_ignore_client_abort on;
    #fastcgi_intercept_errors on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    upstream fastcgi-backend {
	    server 127.0.0.1:9000;
	    keepalive 2;
    }
    upstream fastcgi-rt {
	    server 127.0.0.1:3283;
            keepalive 2;
	    }
    upstream fastcgi-mgr {
	    server 127.0.0.1:3281;
	    keepalive 8;
    }
    upstream fastcgi-dup {
	    server 127.0.0.1:3282;
	    keepalive 2;
    }
    upstream fastcgi-sysmgr {
            server 127.0.0.1:3284;
            keepalive 2;
    }
    #gzip  on;

    server {
        listen       8000;
        server_name  mo;
	send_timeout 60;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /facedb {
		fastcgi_pass fastcgi-mgr;
		fastcgi_keep_conn on;
		fastcgi_index index.cgi;
		fastcgi_param SCRIPT_FILENAME fcgi$fastcgi_script_name;
		include fastcgi_params;
        }

	location /faceops {
		fastcgi_pass fastcgi-mgr;
		fastcgi_keep_conn on;
		fastcgi_index index.cgi;
		fastcgi_param SCRIPT_FILENAME fcgi$fastcgi_script_name;
		include fastcgi_params;
         }

	location /dupface {
		fastcgi_pass fastcgi-dup;
		fastcgi_keep_conn on;
		fastcgi_index index.cgi;
		fastcgi_param SCRIPT_FILENAME fcgi$fastcgi_script_name;
		include fastcgi_params;
        }
            
	location /rtmonitor{
	        fastcgi_pass fastcgi-rt;
		fastcgi_keep_conn on;
		fastcgi_index index.cgi;
		fastcgi_param SCRIPT_FILENAME fcgi$fastcgi_script_name;
		include fastcgi_params; 	
	}

        
        location /sysmgr{
                fastcgi_pass fastcgi-sysmgr;
                fastcgi_keep_conn on;
                fastcgi_index index.cgi;
                fastcgi_param SCRIPT_FILENAME fcgi$fastcgi_script_name;
                include fastcgi_params;
        }

        location /base{
                fastcgi_pass fastcgi-sysmgr;
                fastcgi_keep_conn on;
                fastcgi_index index.cgi;
                fastcgi_param SCRIPT_FILENAME fcgi$fastcgi_script_name;
                include fastcgi_params;
        }

	location ~ \.cgi$ {
		fastcgi_pass fastcgi-backend;
		fastcgi_keep_conn on;
		fastcgi_index index.cgi;
		fastcgi_param SCRIPT_FILENAME fcgi$fastcgi_script_name;
		include fastcgi_params;
	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
